@inproceedings{rehman_fast_2009,
 abstract = {General purpose programming on the graphics processing units (GPGPU) has received a lot of attention in the parallel computing community as it promises to offer the highest performance per dollar. The GPUs have been used extensively on regular problems that can be easily parallelized. In this paper, we describe two implementations of List Ranking, a traditional irregular algorithm that is difficult to parallelize on such massively multi-threaded hardware. We first present an implementation of Wyllie's algorithm based on pointer jumping. This technique does not scale well to large lists due to the suboptimal work done. We then present a GPU-optimized, Recursive Helman-JaJa (RHJ) algorithm. Our RHJ implementation can rank a random list of 32 million elements in about a second and achieves a speedup of about 8-9 over a CPU implementation as well as a speedup of 3-4 over the best reported implementation on the Cell Broadband engine. We also discuss the practical issues relating to the implementation of irregular algorithms on massively multi-threaded architectures like that of the GPU. Regular or coalesced memory accesses pattern and balanced load are critical to achieve good performance on the GPU.},
 address = {New York, NY, USA},
 author = {Rehman, M. Suhail and Kothapalli, Kishore and Narayanan, P. J.},
 booktitle = {Proceedings of the 23rd international conference on Supercomputing},
 copyright = {All rights reserved},
 doi = {10.1145/1542275.1542311},
 isbn = {978-1-60558-498-0},
 keywords = {gpgpu, irregular algorithm, list ranking, many-core, parallel algorithm},
 month = {June},
 pages = {235--243},
 publisher = {Association for Computing Machinery},
 series = {ICS '09},
 title = {Fast and scalable list ranking on the GPU},
 url = {https://doi.org/10.1145/1542275.1542311},
 urldate = {2021-03-03},
 year = {2009}
}

